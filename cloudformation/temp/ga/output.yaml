AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Google Analytics Duplicator
Parameters:
  Name:
    Type: String
    Default: ga_collector
  Stage:
    Type: String
    Default: dev
Resources:
  DataBucket:
    Type: AWS::S3::Bucket
  KinesisFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: KinesisFirehoseS3RolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            Resource:
            - Fn::GetAtt:
              - DataBucket
              - Arn
            - Fn::Join:
              - ''
              - - Fn::GetAtt:
                  - DataBucket
                  - Arn
                - /*
      - PolicyName: KinesisFirehoseLambdaRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            - lambda:GetFunctionConfiguration
            Resource:
            - Fn::Join:
              - ''
              - - Fn::GetAtt:
                  - FirehoseProcessorFunction
                  - Arn
                - :*
  FirehoseProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      MemorySize: 128
      Timeout: 60
      ReservedConcurrentExecutions: 1
      Handler: main.handler
      CodeUri: s3://us-east-1-pipes-cf-artifacts/50dc5677d4e2ac583ae14eb867107c2a
  EventFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      ExtendedS3DestinationConfiguration:
        BucketARN:
          Fn::GetAtt:
          - DataBucket
          - Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 10
        CompressionFormat: UNCOMPRESSED
        Prefix: events/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/
        ErrorOutputPrefix: errors/!{firehose:random-string}/!{firehose:error-output-type}/!{timestamp:yyyy/MM/dd}/
        RoleARN:
          Fn::GetAtt:
          - KinesisFirehoseRole
          - Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
          - Parameters:
            - ParameterName: LambdaArn
              ParameterValue:
                Fn::GetAtt:
                - FirehoseProcessorFunction
                - Arn
            Type: Lambda
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - -api
  GoogleAnalyticsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: com.google.analytics
  GoogleAnalyticsVersion:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      ParentId:
        Ref: GoogleAnalyticsResource
      PathPart: v1
  ApiGatewayPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId:
        Ref: GoogleAnalyticsVersion
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS
        Credentials:
          Fn::GetAtt:
          - GatewayRole
          - Arn
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :firehose:action/PutRecord
        IntegrationHttpMethod: POST
        RequestTemplates:
          text/plain:
            Fn::Sub: "#set( $data_source = \"data_source\")\n#set( $data_source_val\
              \ = \"ga_v1\")\n#set( $key = \"api_key\" )\n#set( $key_ = $context.identity.apiKey\
              \ )\n#set( $trace_id_val = $input.params().get(\"header\").get(\"X-Amzn-Trace-Id\"\
              ))#set( $bodyname = \"body\" )\n#set( $trace_id = \"trace_id\")\n#set(\
              \ $received_at_apig = \"received_at_apig\")\n#set( $received_at_apig_val\
              \ = $context.requestTimeEpoch)\n#set( $body = \"body\")\n#set( $body_val\
              \ = $input.body)\n#set( $message_id = \"message_id\")\n#set( $message_id_val\
              \ = $context.requestId)\n#set( $ip = \"ip\")\n#set( $ip_val = $context.identity.sourceIp)\n\
              #set( $user_agent = \"user_agent\")\n#set( $user_agent_val = $context.identity.userAgent)\n\
              #set( $quote = '\"' )\n#set( $b64 = $util.base64Encode(\"{$quote$data_source$quote:$quote$data_source_val$quote,$quote$key$quote:$quote$key_val$quote,$quote$message_id$quote:$quote$message_id_val$quote,$quote$trace_id$quote:$quote$trace_id_val$quote,$quote$received_at_apig$quote:$quote$received_at_apig_val$quote,$quote$ip$quote:$quote$ip_val$quote,\
              \ $quote$user_agent$quote:$quote$user_agent_val$quote,$quote$body$quote:$quote$body_val$quote}\"\
              ))\n{\n \"DeliveryStreamName\": \"${EventFirehose}\", \n \"Record\"\
              : {\"Data\": \"$b64\"}\n}\n"
        RequestParameters:
          integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
        IntegrationResponses:
        - StatusCode: 200
          ResponseTemplates:
            application/json: '{"status":"OK"}'
      MethodResponses:
      - StatusCode: 200
      RestApiId:
        Ref: ApiGatewayRestApi
  GatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: GatewayRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - firehose:PutRecord
            Resource: '*'
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - ApiGatewayPostMethod
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName:
        Fn::Sub: ${Stage}
Outputs:
  CollectorEndpoint:
    Description: URL of the endpoint that should be used with Google Analytics Duplicator
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: ApiGatewayRestApi
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com/
        - Fn::Sub: ${Stage}
        - /
